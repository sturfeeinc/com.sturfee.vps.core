// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: params.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SturfeeVPS.Core.Proto
{

    /// <summary>Holder for reflection information generated from params.proto</summary>
    public static partial class ParamsReflection
    {

        #region Descriptor
        /// <summary>File descriptor for params.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static ParamsReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "CgxwYXJhbXMucHJvdG8SFVN0dXJmZWVWUFMuQ29yZS5Qcm90byI0CghQb3Np",
                  "dGlvbhILCgNsYXQYASABKAESCwoDbG9uGAIgASgBEg4KBmhlaWdodBgDIAEo",
                  "ASI4CgpRdWF0ZXJuaW9uEgkKAXgYAiABKAESCQoBeRgBIAEoARIJCgF6GAMg",
                  "ASgBEgkKAXcYBCABKAEifgoSRXh0ZXJuYWxQYXJhbWV0ZXJzEjEKCHBvc2l0",
                  "aW9uGAEgASgLMh8uU3R1cmZlZVZQUy5Db3JlLlByb3RvLlBvc2l0aW9uEjUK",
                  "CnF1YXRlcm5pb24YAiABKAsyIS5TdHVyZmVlVlBTLkNvcmUuUHJvdG8uUXVh",
                  "dGVybmlvbiJmChJJbnRlcm5hbFBhcmFtZXRlcnMSFAoMc2NlbmVfaGVpZ2h0",
                  "GAEgASgNEhMKC3NjZW5lX3dpZHRoGAIgASgNEgsKA2ZvdhgDIAEoAhIYChBw",
                  "cm9qZWN0aW9uTWF0cml4GAQgAygBItsCCgdSZXF1ZXN0EjsKCW9wZXJhdGlv",
                  "bhgBIAEoDjIoLlN0dXJmZWVWUFMuQ29yZS5Qcm90by5PcGVyYXRpb25NZXNz",
                  "YWdlcxISCgpyZXF1ZXN0X2lkGAIgASgNEkYKE2V4dGVybmFsX3BhcmFtZXRl",
                  "cnMYAyABKAsyKS5TdHVyZmVlVlBTLkNvcmUuUHJvdG8uRXh0ZXJuYWxQYXJh",
                  "bWV0ZXJzEkYKE2ludGVybmFsX3BhcmFtZXRlcnMYBCABKAsyKS5TdHVyZmVl",
                  "VlBTLkNvcmUuUHJvdG8uSW50ZXJuYWxQYXJhbWV0ZXJzEhsKE3RvdGFsX251",
                  "bV9vZl9mcmFtZXMYBSABKA0SEwoLZnJhbWVfb3JkZXIYBiABKA0SEwoLdHJh",
                  "Y2tpbmdfaWQYByABKAkSFAoMc291cmNlX2ltYWdlGAkgASgMEhIKCmRldl9y",
                  "YWRpdXMYFCABKAMiwwEKCFJlc3BvbnNlEjEKCHBvc2l0aW9uGAEgASgLMh8u",
                  "U3R1cmZlZVZQUy5Db3JlLlByb3RvLlBvc2l0aW9uEkAKFXlhd19vZmZzZXRf",
                  "cXVhdGVybmlvbhgCIAEoCzIhLlN0dXJmZWVWUFMuQ29yZS5Qcm90by5RdWF0",
                  "ZXJuaW9uEkIKF3BpdGNoX29mZnNldF9xdWF0ZXJuaW9uGAMgASgLMiEuU3R1",
                  "cmZlZVZQUy5Db3JlLlByb3RvLlF1YXRlcm5pb24i0gEKBUVycm9yEjUKBGNv",
                  "ZGUYASABKA4yJy5TdHVyZmVlVlBTLkNvcmUuUHJvdG8uRXJyb3IuRXJyb3JD",
                  "b2RlcxIPCgdtZXNzYWdlGAIgASgJIoABCgpFcnJvckNvZGVzEgwKCE5PX0VS",
                  "Uk9SEAASHAoXVU5FWFBFQ1RFRF9TRVJWRVJfRVJST1IQ2ygSEwoOUFJPVE9D",
                  "T0xfRVJST1IQ3CgSFQoQVkFMSURBVElPTl9FUlJPUhDdKBIaChVPVVRfT0Zf",
                  "Q09WRVJBR0VfRVJST1IQ3igimgEKD1Jlc3BvbnNlTWVzc2FnZRISCgpyZXF1",
                  "ZXN0X2lkGAEgASgNEhMKC3RyYWNraW5nX2lkGAIgASgJEjEKCHJlc3BvbnNl",
                  "GAMgASgLMh8uU3R1cmZlZVZQUy5Db3JlLlByb3RvLlJlc3BvbnNlEisKBWVy",
                  "cm9yGAQgASgLMhwuU3R1cmZlZVZQUy5Db3JlLlByb3RvLkVycm9yKj4KEU9w",
                  "ZXJhdGlvbk1lc3NhZ2VzEg8KC1VOU1VQUE9SVEVEEAASDQoJQUxJR05NRU5U",
                  "EAQSCQoFUkVMT0MQBWIGcHJvdG8z"));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(new[] { typeof(global::SturfeeVPS.Core.Proto.OperationMessages), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SturfeeVPS.Core.Proto.Position), global::SturfeeVPS.Core.Proto.Position.Parser, new[]{ "Lat", "Lon", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SturfeeVPS.Core.Proto.Quaternion), global::SturfeeVPS.Core.Proto.Quaternion.Parser, new[]{ "X", "Y", "Z", "W" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SturfeeVPS.Core.Proto.ExternalParameters), global::SturfeeVPS.Core.Proto.ExternalParameters.Parser, new[]{ "Position", "Quaternion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SturfeeVPS.Core.Proto.InternalParameters), global::SturfeeVPS.Core.Proto.InternalParameters.Parser, new[]{ "SceneHeight", "SceneWidth", "Fov", "ProjectionMatrix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SturfeeVPS.Core.Proto.Request), global::SturfeeVPS.Core.Proto.Request.Parser, new[]{ "Operation", "RequestId", "ExternalParameters", "InternalParameters", "TotalNumOfFrames", "FrameOrder", "TrackingId", "SourceImage", "DevRadius" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SturfeeVPS.Core.Proto.Response), global::SturfeeVPS.Core.Proto.Response.Parser, new[]{ "Position", "YawOffsetQuaternion", "PitchOffsetQuaternion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SturfeeVPS.Core.Proto.Error), global::SturfeeVPS.Core.Proto.Error.Parser, new[]{ "Code", "Message" }, null, new[]{ typeof(global::SturfeeVPS.Core.Proto.Error.Types.ErrorCodes) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SturfeeVPS.Core.Proto.ResponseMessage), global::SturfeeVPS.Core.Proto.ResponseMessage.Parser, new[]{ "RequestId", "TrackingId", "Response", "Error" }, null, null, null, null)
                }));
        }
        #endregion

    }
    #region Enums
    public enum OperationMessages
    {
        [pbr::OriginalName("UNSUPPORTED")] Unsupported = 0,
        [pbr::OriginalName("ALIGNMENT")] Alignment = 4,
        [pbr::OriginalName("RELOC")] Reloc = 5,
    }

    #endregion

    #region Messages
    public sealed partial class Position : pb::IMessage<Position>
    {
        private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Position> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::SturfeeVPS.Core.Proto.ParamsReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Position()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Position(Position other) : this()
        {
            lat_ = other.lat_;
            lon_ = other.lon_;
            height_ = other.height_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Position Clone()
        {
            return new Position(this);
        }

        /// <summary>Field number for the "lat" field.</summary>
        public const int LatFieldNumber = 1;
        private double lat_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Lat
        {
            get { return lat_; }
            set
            {
                lat_ = value;
            }
        }

        /// <summary>Field number for the "lon" field.</summary>
        public const int LonFieldNumber = 2;
        private double lon_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Lon
        {
            get { return lon_; }
            set
            {
                lon_ = value;
            }
        }

        /// <summary>Field number for the "height" field.</summary>
        public const int HeightFieldNumber = 3;
        private double height_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Height
        {
            get { return height_; }
            set
            {
                height_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Position);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Position other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lat, other.Lat)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lon, other.Lon)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Height, other.Height)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Lat != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lat);
            if (Lon != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lon);
            if (Height != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Height);
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Lat != 0D)
            {
                output.WriteRawTag(9);
                output.WriteDouble(Lat);
            }
            if (Lon != 0D)
            {
                output.WriteRawTag(17);
                output.WriteDouble(Lon);
            }
            if (Height != 0D)
            {
                output.WriteRawTag(25);
                output.WriteDouble(Height);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Lat != 0D)
            {
                size += 1 + 8;
            }
            if (Lon != 0D)
            {
                size += 1 + 8;
            }
            if (Height != 0D)
            {
                size += 1 + 8;
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Position other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Lat != 0D)
            {
                Lat = other.Lat;
            }
            if (other.Lon != 0D)
            {
                Lon = other.Lon;
            }
            if (other.Height != 0D)
            {
                Height = other.Height;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 9:
                        {
                            Lat = input.ReadDouble();
                            break;
                        }
                    case 17:
                        {
                            Lon = input.ReadDouble();
                            break;
                        }
                    case 25:
                        {
                            Height = input.ReadDouble();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Quaternion : pb::IMessage<Quaternion>
    {
        private static readonly pb::MessageParser<Quaternion> _parser = new pb::MessageParser<Quaternion>(() => new Quaternion());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Quaternion> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::SturfeeVPS.Core.Proto.ParamsReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Quaternion()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Quaternion(Quaternion other) : this()
        {
            x_ = other.x_;
            y_ = other.y_;
            z_ = other.z_;
            w_ = other.w_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Quaternion Clone()
        {
            return new Quaternion(this);
        }

        /// <summary>Field number for the "x" field.</summary>
        public const int XFieldNumber = 2;
        private double x_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double X
        {
            get { return x_; }
            set
            {
                x_ = value;
            }
        }

        /// <summary>Field number for the "y" field.</summary>
        public const int YFieldNumber = 1;
        private double y_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Y
        {
            get { return y_; }
            set
            {
                y_ = value;
            }
        }

        /// <summary>Field number for the "z" field.</summary>
        public const int ZFieldNumber = 3;
        private double z_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double Z
        {
            get { return z_; }
            set
            {
                z_ = value;
            }
        }

        /// <summary>Field number for the "w" field.</summary>
        public const int WFieldNumber = 4;
        private double w_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double W
        {
            get { return w_; }
            set
            {
                w_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Quaternion);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Quaternion other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Z, other.Z)) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(W, other.W)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
            if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
            if (Z != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Z);
            if (W != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(W);
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Y != 0D)
            {
                output.WriteRawTag(9);
                output.WriteDouble(Y);
            }
            if (X != 0D)
            {
                output.WriteRawTag(17);
                output.WriteDouble(X);
            }
            if (Z != 0D)
            {
                output.WriteRawTag(25);
                output.WriteDouble(Z);
            }
            if (W != 0D)
            {
                output.WriteRawTag(33);
                output.WriteDouble(W);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (X != 0D)
            {
                size += 1 + 8;
            }
            if (Y != 0D)
            {
                size += 1 + 8;
            }
            if (Z != 0D)
            {
                size += 1 + 8;
            }
            if (W != 0D)
            {
                size += 1 + 8;
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Quaternion other)
        {
            if (other == null)
            {
                return;
            }
            if (other.X != 0D)
            {
                X = other.X;
            }
            if (other.Y != 0D)
            {
                Y = other.Y;
            }
            if (other.Z != 0D)
            {
                Z = other.Z;
            }
            if (other.W != 0D)
            {
                W = other.W;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 9:
                        {
                            Y = input.ReadDouble();
                            break;
                        }
                    case 17:
                        {
                            X = input.ReadDouble();
                            break;
                        }
                    case 25:
                        {
                            Z = input.ReadDouble();
                            break;
                        }
                    case 33:
                        {
                            W = input.ReadDouble();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class ExternalParameters : pb::IMessage<ExternalParameters>
    {
        private static readonly pb::MessageParser<ExternalParameters> _parser = new pb::MessageParser<ExternalParameters>(() => new ExternalParameters());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ExternalParameters> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::SturfeeVPS.Core.Proto.ParamsReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExternalParameters()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExternalParameters(ExternalParameters other) : this()
        {
            position_ = other.position_ != null ? other.position_.Clone() : null;
            quaternion_ = other.quaternion_ != null ? other.quaternion_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExternalParameters Clone()
        {
            return new ExternalParameters(this);
        }

        /// <summary>Field number for the "position" field.</summary>
        public const int PositionFieldNumber = 1;
        private global::SturfeeVPS.Core.Proto.Position position_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SturfeeVPS.Core.Proto.Position Position
        {
            get { return position_; }
            set
            {
                position_ = value;
            }
        }

        /// <summary>Field number for the "quaternion" field.</summary>
        public const int QuaternionFieldNumber = 2;
        private global::SturfeeVPS.Core.Proto.Quaternion quaternion_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SturfeeVPS.Core.Proto.Quaternion Quaternion
        {
            get { return quaternion_; }
            set
            {
                quaternion_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ExternalParameters);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ExternalParameters other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Position, other.Position)) return false;
            if (!object.Equals(Quaternion, other.Quaternion)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (position_ != null) hash ^= Position.GetHashCode();
            if (quaternion_ != null) hash ^= Quaternion.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (position_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Position);
            }
            if (quaternion_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Quaternion);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (position_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
            }
            if (quaternion_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quaternion);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ExternalParameters other)
        {
            if (other == null)
            {
                return;
            }
            if (other.position_ != null)
            {
                if (position_ == null)
                {
                    Position = new global::SturfeeVPS.Core.Proto.Position();
                }
                Position.MergeFrom(other.Position);
            }
            if (other.quaternion_ != null)
            {
                if (quaternion_ == null)
                {
                    Quaternion = new global::SturfeeVPS.Core.Proto.Quaternion();
                }
                Quaternion.MergeFrom(other.Quaternion);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (position_ == null)
                            {
                                Position = new global::SturfeeVPS.Core.Proto.Position();
                            }
                            input.ReadMessage(Position);
                            break;
                        }
                    case 18:
                        {
                            if (quaternion_ == null)
                            {
                                Quaternion = new global::SturfeeVPS.Core.Proto.Quaternion();
                            }
                            input.ReadMessage(Quaternion);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class InternalParameters : pb::IMessage<InternalParameters>
    {
        private static readonly pb::MessageParser<InternalParameters> _parser = new pb::MessageParser<InternalParameters>(() => new InternalParameters());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InternalParameters> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::SturfeeVPS.Core.Proto.ParamsReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InternalParameters()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InternalParameters(InternalParameters other) : this()
        {
            sceneHeight_ = other.sceneHeight_;
            sceneWidth_ = other.sceneWidth_;
            fov_ = other.fov_;
            projectionMatrix_ = other.projectionMatrix_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InternalParameters Clone()
        {
            return new InternalParameters(this);
        }

        /// <summary>Field number for the "scene_height" field.</summary>
        public const int SceneHeightFieldNumber = 1;
        private uint sceneHeight_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint SceneHeight
        {
            get { return sceneHeight_; }
            set
            {
                sceneHeight_ = value;
            }
        }

        /// <summary>Field number for the "scene_width" field.</summary>
        public const int SceneWidthFieldNumber = 2;
        private uint sceneWidth_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint SceneWidth
        {
            get { return sceneWidth_; }
            set
            {
                sceneWidth_ = value;
            }
        }

        /// <summary>Field number for the "fov" field.</summary>
        public const int FovFieldNumber = 3;
        private float fov_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Fov
        {
            get { return fov_; }
            set
            {
                fov_ = value;
            }
        }

        /// <summary>Field number for the "projectionMatrix" field.</summary>
        public const int ProjectionMatrixFieldNumber = 4;
        private static readonly pb::FieldCodec<double> _repeated_projectionMatrix_codec
            = pb::FieldCodec.ForDouble(34);
        private readonly pbc::RepeatedField<double> projectionMatrix_ = new pbc::RepeatedField<double>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<double> ProjectionMatrix
        {
            get { return projectionMatrix_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as InternalParameters);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InternalParameters other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (SceneHeight != other.SceneHeight) return false;
            if (SceneWidth != other.SceneWidth) return false;
            if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Fov, other.Fov)) return false;
            if (!projectionMatrix_.Equals(other.projectionMatrix_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (SceneHeight != 0) hash ^= SceneHeight.GetHashCode();
            if (SceneWidth != 0) hash ^= SceneWidth.GetHashCode();
            if (Fov != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Fov);
            hash ^= projectionMatrix_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (SceneHeight != 0)
            {
                output.WriteRawTag(8);
                output.WriteUInt32(SceneHeight);
            }
            if (SceneWidth != 0)
            {
                output.WriteRawTag(16);
                output.WriteUInt32(SceneWidth);
            }
            if (Fov != 0F)
            {
                output.WriteRawTag(29);
                output.WriteFloat(Fov);
            }
            projectionMatrix_.WriteTo(output, _repeated_projectionMatrix_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (SceneHeight != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SceneHeight);
            }
            if (SceneWidth != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SceneWidth);
            }
            if (Fov != 0F)
            {
                size += 1 + 4;
            }
            size += projectionMatrix_.CalculateSize(_repeated_projectionMatrix_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InternalParameters other)
        {
            if (other == null)
            {
                return;
            }
            if (other.SceneHeight != 0)
            {
                SceneHeight = other.SceneHeight;
            }
            if (other.SceneWidth != 0)
            {
                SceneWidth = other.SceneWidth;
            }
            if (other.Fov != 0F)
            {
                Fov = other.Fov;
            }
            projectionMatrix_.Add(other.projectionMatrix_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            SceneHeight = input.ReadUInt32();
                            break;
                        }
                    case 16:
                        {
                            SceneWidth = input.ReadUInt32();
                            break;
                        }
                    case 29:
                        {
                            Fov = input.ReadFloat();
                            break;
                        }
                    case 34:
                    case 33:
                        {
                            projectionMatrix_.AddEntriesFrom(input, _repeated_projectionMatrix_codec);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Request : pb::IMessage<Request>
    {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::SturfeeVPS.Core.Proto.ParamsReflection.Descriptor.MessageTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this()
        {
            operation_ = other.operation_;
            requestId_ = other.requestId_;
            externalParameters_ = other.externalParameters_ != null ? other.externalParameters_.Clone() : null;
            internalParameters_ = other.internalParameters_ != null ? other.internalParameters_.Clone() : null;
            totalNumOfFrames_ = other.totalNumOfFrames_;
            frameOrder_ = other.frameOrder_;
            trackingId_ = other.trackingId_;
            sourceImage_ = other.sourceImage_;
            devRadius_ = other.devRadius_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone()
        {
            return new Request(this);
        }

        /// <summary>Field number for the "operation" field.</summary>
        public const int OperationFieldNumber = 1;
        private global::SturfeeVPS.Core.Proto.OperationMessages operation_ = global::SturfeeVPS.Core.Proto.OperationMessages.Unsupported;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SturfeeVPS.Core.Proto.OperationMessages Operation
        {
            get { return operation_; }
            set
            {
                operation_ = value;
            }
        }

        /// <summary>Field number for the "request_id" field.</summary>
        public const int RequestIdFieldNumber = 2;
        private uint requestId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint RequestId
        {
            get { return requestId_; }
            set
            {
                requestId_ = value;
            }
        }

        /// <summary>Field number for the "external_parameters" field.</summary>
        public const int ExternalParametersFieldNumber = 3;
        private global::SturfeeVPS.Core.Proto.ExternalParameters externalParameters_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SturfeeVPS.Core.Proto.ExternalParameters ExternalParameters
        {
            get { return externalParameters_; }
            set
            {
                externalParameters_ = value;
            }
        }

        /// <summary>Field number for the "internal_parameters" field.</summary>
        public const int InternalParametersFieldNumber = 4;
        private global::SturfeeVPS.Core.Proto.InternalParameters internalParameters_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SturfeeVPS.Core.Proto.InternalParameters InternalParameters
        {
            get { return internalParameters_; }
            set
            {
                internalParameters_ = value;
            }
        }

        /// <summary>Field number for the "total_num_of_frames" field.</summary>
        public const int TotalNumOfFramesFieldNumber = 5;
        private uint totalNumOfFrames_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint TotalNumOfFrames
        {
            get { return totalNumOfFrames_; }
            set
            {
                totalNumOfFrames_ = value;
            }
        }

        /// <summary>Field number for the "frame_order" field.</summary>
        public const int FrameOrderFieldNumber = 6;
        private uint frameOrder_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint FrameOrder
        {
            get { return frameOrder_; }
            set
            {
                frameOrder_ = value;
            }
        }

        /// <summary>Field number for the "tracking_id" field.</summary>
        public const int TrackingIdFieldNumber = 7;
        private string trackingId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TrackingId
        {
            get { return trackingId_; }
            set
            {
                trackingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "source_image" field.</summary>
        public const int SourceImageFieldNumber = 9;
        private pb::ByteString sourceImage_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString SourceImage
        {
            get { return sourceImage_; }
            set
            {
                sourceImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "dev_radius" field.</summary>
        public const int DevRadiusFieldNumber = 20;
        private long devRadius_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long DevRadius
        {
            get { return devRadius_; }
            set
            {
                devRadius_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Operation != other.Operation) return false;
            if (RequestId != other.RequestId) return false;
            if (!object.Equals(ExternalParameters, other.ExternalParameters)) return false;
            if (!object.Equals(InternalParameters, other.InternalParameters)) return false;
            if (TotalNumOfFrames != other.TotalNumOfFrames) return false;
            if (FrameOrder != other.FrameOrder) return false;
            if (TrackingId != other.TrackingId) return false;
            if (SourceImage != other.SourceImage) return false;
            if (DevRadius != other.DevRadius) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Operation != global::SturfeeVPS.Core.Proto.OperationMessages.Unsupported) hash ^= Operation.GetHashCode();
            if (RequestId != 0) hash ^= RequestId.GetHashCode();
            if (externalParameters_ != null) hash ^= ExternalParameters.GetHashCode();
            if (internalParameters_ != null) hash ^= InternalParameters.GetHashCode();
            if (TotalNumOfFrames != 0) hash ^= TotalNumOfFrames.GetHashCode();
            if (FrameOrder != 0) hash ^= FrameOrder.GetHashCode();
            if (TrackingId.Length != 0) hash ^= TrackingId.GetHashCode();
            if (SourceImage.Length != 0) hash ^= SourceImage.GetHashCode();
            if (DevRadius != 0L) hash ^= DevRadius.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Operation != global::SturfeeVPS.Core.Proto.OperationMessages.Unsupported)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Operation);
            }
            if (RequestId != 0)
            {
                output.WriteRawTag(16);
                output.WriteUInt32(RequestId);
            }
            if (externalParameters_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(ExternalParameters);
            }
            if (internalParameters_ != null)
            {
                output.WriteRawTag(34);
                output.WriteMessage(InternalParameters);
            }
            if (TotalNumOfFrames != 0)
            {
                output.WriteRawTag(40);
                output.WriteUInt32(TotalNumOfFrames);
            }
            if (FrameOrder != 0)
            {
                output.WriteRawTag(48);
                output.WriteUInt32(FrameOrder);
            }
            if (TrackingId.Length != 0)
            {
                output.WriteRawTag(58);
                output.WriteString(TrackingId);
            }
            if (SourceImage.Length != 0)
            {
                output.WriteRawTag(74);
                output.WriteBytes(SourceImage);
            }
            if (DevRadius != 0L)
            {
                output.WriteRawTag(160, 1);
                output.WriteInt64(DevRadius);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Operation != global::SturfeeVPS.Core.Proto.OperationMessages.Unsupported)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Operation);
            }
            if (RequestId != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
            }
            if (externalParameters_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalParameters);
            }
            if (internalParameters_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(InternalParameters);
            }
            if (TotalNumOfFrames != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalNumOfFrames);
            }
            if (FrameOrder != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FrameOrder);
            }
            if (TrackingId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackingId);
            }
            if (SourceImage.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(SourceImage);
            }
            if (DevRadius != 0L)
            {
                size += 2 + pb::CodedOutputStream.ComputeInt64Size(DevRadius);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Operation != global::SturfeeVPS.Core.Proto.OperationMessages.Unsupported)
            {
                Operation = other.Operation;
            }
            if (other.RequestId != 0)
            {
                RequestId = other.RequestId;
            }
            if (other.externalParameters_ != null)
            {
                if (externalParameters_ == null)
                {
                    ExternalParameters = new global::SturfeeVPS.Core.Proto.ExternalParameters();
                }
                ExternalParameters.MergeFrom(other.ExternalParameters);
            }
            if (other.internalParameters_ != null)
            {
                if (internalParameters_ == null)
                {
                    InternalParameters = new global::SturfeeVPS.Core.Proto.InternalParameters();
                }
                InternalParameters.MergeFrom(other.InternalParameters);
            }
            if (other.TotalNumOfFrames != 0)
            {
                TotalNumOfFrames = other.TotalNumOfFrames;
            }
            if (other.FrameOrder != 0)
            {
                FrameOrder = other.FrameOrder;
            }
            if (other.TrackingId.Length != 0)
            {
                TrackingId = other.TrackingId;
            }
            if (other.SourceImage.Length != 0)
            {
                SourceImage = other.SourceImage;
            }
            if (other.DevRadius != 0L)
            {
                DevRadius = other.DevRadius;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Operation = (global::SturfeeVPS.Core.Proto.OperationMessages)input.ReadEnum();
                            break;
                        }
                    case 16:
                        {
                            RequestId = input.ReadUInt32();
                            break;
                        }
                    case 26:
                        {
                            if (externalParameters_ == null)
                            {
                                ExternalParameters = new global::SturfeeVPS.Core.Proto.ExternalParameters();
                            }
                            input.ReadMessage(ExternalParameters);
                            break;
                        }
                    case 34:
                        {
                            if (internalParameters_ == null)
                            {
                                InternalParameters = new global::SturfeeVPS.Core.Proto.InternalParameters();
                            }
                            input.ReadMessage(InternalParameters);
                            break;
                        }
                    case 40:
                        {
                            TotalNumOfFrames = input.ReadUInt32();
                            break;
                        }
                    case 48:
                        {
                            FrameOrder = input.ReadUInt32();
                            break;
                        }
                    case 58:
                        {
                            TrackingId = input.ReadString();
                            break;
                        }
                    case 74:
                        {
                            SourceImage = input.ReadBytes();
                            break;
                        }
                    case 160:
                        {
                            DevRadius = input.ReadInt64();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Response : pb::IMessage<Response>
    {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::SturfeeVPS.Core.Proto.ParamsReflection.Descriptor.MessageTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this()
        {
            position_ = other.position_ != null ? other.position_.Clone() : null;
            yawOffsetQuaternion_ = other.yawOffsetQuaternion_ != null ? other.yawOffsetQuaternion_.Clone() : null;
            pitchOffsetQuaternion_ = other.pitchOffsetQuaternion_ != null ? other.pitchOffsetQuaternion_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone()
        {
            return new Response(this);
        }

        /// <summary>Field number for the "position" field.</summary>
        public const int PositionFieldNumber = 1;
        private global::SturfeeVPS.Core.Proto.Position position_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SturfeeVPS.Core.Proto.Position Position
        {
            get { return position_; }
            set
            {
                position_ = value;
            }
        }

        /// <summary>Field number for the "yaw_offset_quaternion" field.</summary>
        public const int YawOffsetQuaternionFieldNumber = 2;
        private global::SturfeeVPS.Core.Proto.Quaternion yawOffsetQuaternion_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SturfeeVPS.Core.Proto.Quaternion YawOffsetQuaternion
        {
            get { return yawOffsetQuaternion_; }
            set
            {
                yawOffsetQuaternion_ = value;
            }
        }

        /// <summary>Field number for the "pitch_offset_quaternion" field.</summary>
        public const int PitchOffsetQuaternionFieldNumber = 3;
        private global::SturfeeVPS.Core.Proto.Quaternion pitchOffsetQuaternion_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SturfeeVPS.Core.Proto.Quaternion PitchOffsetQuaternion
        {
            get { return pitchOffsetQuaternion_; }
            set
            {
                pitchOffsetQuaternion_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Position, other.Position)) return false;
            if (!object.Equals(YawOffsetQuaternion, other.YawOffsetQuaternion)) return false;
            if (!object.Equals(PitchOffsetQuaternion, other.PitchOffsetQuaternion)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (position_ != null) hash ^= Position.GetHashCode();
            if (yawOffsetQuaternion_ != null) hash ^= YawOffsetQuaternion.GetHashCode();
            if (pitchOffsetQuaternion_ != null) hash ^= PitchOffsetQuaternion.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (position_ != null)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Position);
            }
            if (yawOffsetQuaternion_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(YawOffsetQuaternion);
            }
            if (pitchOffsetQuaternion_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(PitchOffsetQuaternion);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (position_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
            }
            if (yawOffsetQuaternion_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(YawOffsetQuaternion);
            }
            if (pitchOffsetQuaternion_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(PitchOffsetQuaternion);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other)
        {
            if (other == null)
            {
                return;
            }
            if (other.position_ != null)
            {
                if (position_ == null)
                {
                    Position = new global::SturfeeVPS.Core.Proto.Position();
                }
                Position.MergeFrom(other.Position);
            }
            if (other.yawOffsetQuaternion_ != null)
            {
                if (yawOffsetQuaternion_ == null)
                {
                    YawOffsetQuaternion = new global::SturfeeVPS.Core.Proto.Quaternion();
                }
                YawOffsetQuaternion.MergeFrom(other.YawOffsetQuaternion);
            }
            if (other.pitchOffsetQuaternion_ != null)
            {
                if (pitchOffsetQuaternion_ == null)
                {
                    PitchOffsetQuaternion = new global::SturfeeVPS.Core.Proto.Quaternion();
                }
                PitchOffsetQuaternion.MergeFrom(other.PitchOffsetQuaternion);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            if (position_ == null)
                            {
                                Position = new global::SturfeeVPS.Core.Proto.Position();
                            }
                            input.ReadMessage(Position);
                            break;
                        }
                    case 18:
                        {
                            if (yawOffsetQuaternion_ == null)
                            {
                                YawOffsetQuaternion = new global::SturfeeVPS.Core.Proto.Quaternion();
                            }
                            input.ReadMessage(YawOffsetQuaternion);
                            break;
                        }
                    case 26:
                        {
                            if (pitchOffsetQuaternion_ == null)
                            {
                                PitchOffsetQuaternion = new global::SturfeeVPS.Core.Proto.Quaternion();
                            }
                            input.ReadMessage(PitchOffsetQuaternion);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Error : pb::IMessage<Error>
    {
        private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Error> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::SturfeeVPS.Core.Proto.ParamsReflection.Descriptor.MessageTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error(Error other) : this()
        {
            code_ = other.code_;
            message_ = other.message_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Error Clone()
        {
            return new Error(this);
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 1;
        private global::SturfeeVPS.Core.Proto.Error.Types.ErrorCodes code_ = global::SturfeeVPS.Core.Proto.Error.Types.ErrorCodes.NoError;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SturfeeVPS.Core.Proto.Error.Types.ErrorCodes Code
        {
            get { return code_; }
            set
            {
                code_ = value;
            }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 2;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message
        {
            get { return message_; }
            set
            {
                message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Error);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Error other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Code != other.Code) return false;
            if (Message != other.Message) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Code != global::SturfeeVPS.Core.Proto.Error.Types.ErrorCodes.NoError) hash ^= Code.GetHashCode();
            if (Message.Length != 0) hash ^= Message.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Code != global::SturfeeVPS.Core.Proto.Error.Types.ErrorCodes.NoError)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Code);
            }
            if (Message.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Message);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Code != global::SturfeeVPS.Core.Proto.Error.Types.ErrorCodes.NoError)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Code);
            }
            if (Message.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Error other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Code != global::SturfeeVPS.Core.Proto.Error.Types.ErrorCodes.NoError)
            {
                Code = other.Code;
            }
            if (other.Message.Length != 0)
            {
                Message = other.Message;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Code = (global::SturfeeVPS.Core.Proto.Error.Types.ErrorCodes)input.ReadEnum();
                            break;
                        }
                    case 18:
                        {
                            Message = input.ReadString();
                            break;
                        }
                }
            }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Error message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types
        {
            public enum ErrorCodes
            {
                [pbr::OriginalName("NO_ERROR")] NoError = 0,
                [pbr::OriginalName("UNEXPECTED_SERVER_ERROR")] UnexpectedServerError = 5211,
                [pbr::OriginalName("PROTOCOL_ERROR")] ProtocolError = 5212,
                [pbr::OriginalName("VALIDATION_ERROR")] ValidationError = 5213,
                [pbr::OriginalName("OUT_OF_COVERAGE_ERROR")] OutOfCoverageError = 5214,
            }

        }
        #endregion

    }

    public sealed partial class ResponseMessage : pb::IMessage<ResponseMessage>
    {
        private static readonly pb::MessageParser<ResponseMessage> _parser = new pb::MessageParser<ResponseMessage>(() => new ResponseMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ResponseMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::SturfeeVPS.Core.Proto.ParamsReflection.Descriptor.MessageTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResponseMessage()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResponseMessage(ResponseMessage other) : this()
        {
            requestId_ = other.requestId_;
            trackingId_ = other.trackingId_;
            response_ = other.response_ != null ? other.response_.Clone() : null;
            error_ = other.error_ != null ? other.error_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ResponseMessage Clone()
        {
            return new ResponseMessage(this);
        }

        /// <summary>Field number for the "request_id" field.</summary>
        public const int RequestIdFieldNumber = 1;
        private uint requestId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint RequestId
        {
            get { return requestId_; }
            set
            {
                requestId_ = value;
            }
        }

        /// <summary>Field number for the "tracking_id" field.</summary>
        public const int TrackingIdFieldNumber = 2;
        private string trackingId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TrackingId
        {
            get { return trackingId_; }
            set
            {
                trackingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "response" field.</summary>
        public const int ResponseFieldNumber = 3;
        private global::SturfeeVPS.Core.Proto.Response response_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SturfeeVPS.Core.Proto.Response Response
        {
            get { return response_; }
            set
            {
                response_ = value;
            }
        }

        /// <summary>Field number for the "error" field.</summary>
        public const int ErrorFieldNumber = 4;
        private global::SturfeeVPS.Core.Proto.Error error_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SturfeeVPS.Core.Proto.Error Error
        {
            get { return error_; }
            set
            {
                error_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ResponseMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ResponseMessage other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (RequestId != other.RequestId) return false;
            if (TrackingId != other.TrackingId) return false;
            if (!object.Equals(Response, other.Response)) return false;
            if (!object.Equals(Error, other.Error)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (RequestId != 0) hash ^= RequestId.GetHashCode();
            if (TrackingId.Length != 0) hash ^= TrackingId.GetHashCode();
            if (response_ != null) hash ^= Response.GetHashCode();
            if (error_ != null) hash ^= Error.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (RequestId != 0)
            {
                output.WriteRawTag(8);
                output.WriteUInt32(RequestId);
            }
            if (TrackingId.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(TrackingId);
            }
            if (response_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Response);
            }
            if (error_ != null)
            {
                output.WriteRawTag(34);
                output.WriteMessage(Error);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (RequestId != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
            }
            if (TrackingId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackingId);
            }
            if (response_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
            }
            if (error_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ResponseMessage other)
        {
            if (other == null)
            {
                return;
            }
            if (other.RequestId != 0)
            {
                RequestId = other.RequestId;
            }
            if (other.TrackingId.Length != 0)
            {
                TrackingId = other.TrackingId;
            }
            if (other.response_ != null)
            {
                if (response_ == null)
                {
                    Response = new global::SturfeeVPS.Core.Proto.Response();
                }
                Response.MergeFrom(other.Response);
            }
            if (other.error_ != null)
            {
                if (error_ == null)
                {
                    Error = new global::SturfeeVPS.Core.Proto.Error();
                }
                Error.MergeFrom(other.Error);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            RequestId = input.ReadUInt32();
                            break;
                        }
                    case 18:
                        {
                            TrackingId = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            if (response_ == null)
                            {
                                Response = new global::SturfeeVPS.Core.Proto.Response();
                            }
                            input.ReadMessage(Response);
                            break;
                        }
                    case 34:
                        {
                            if (error_ == null)
                            {
                                Error = new global::SturfeeVPS.Core.Proto.Error();
                            }
                            input.ReadMessage(Error);
                            break;
                        }
                }
            }
        }

    }

    #endregion

}

#endregion Designer generated code
